/* CREATE TABLE */

CREATE TABLE IF NOT EXIST table_name (
    column1 datatype(length) column_constraint DEFAULT,
    ...
    table_constraints
);

/* Column level constraints = primary key, foreign key, not null, unique, check */

CREATE table products (
    product_id SERIAL PRIMARY KEY,
    category_id int NOT NULL
    customer_id varchar(255) NOT NULL
    email varchar(255) NOT NULL UNIQUE
    phone varchar(255) NOT NULL
    order_date DATE NOT NULL
    price numeric CHECK(price > 100)
    UNIQUE(email)
    CONSTRAINT fk_product_category FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE delete_action ON UPDATE update_action
);
/* ON DELETE CASCADE removes all related records  */

ALTER TABLE products ADD CONSTRAINT price_check CHECK (price > 150);
ALTER TABLE products DROP CONSTRAINT price_check;

/* CREATE TABLE AS statement is used to create a new table that contains the query result set */
CREATE TABLE action_film AS SELECT film_id, title, release_year, length, rating FROM film INNER JOIN film_category USING (film_id) WHERE category_id = 1;

/* if we use SERIAL as type we create a sequence in PostgreSQL. Sequence generates an integer. */

/* GENERATED BY DEFAULT AS IDENTITY creates a unique value for the column. */
CREATE TABLE color ( color_id INT GENERATED BY DEFAULT AS IDENTITY, color_name VARCHAR NOT NULL );

/* GENERATED ALWAYS AS can be used for generating a value while adding a row */
CREATE TABLE product (id SERIAL PRIMARY KEY,  list_price DECIMAL(10, 2) NOT NULL, discount DECIMAL(5, 2) DEFAULT 0,
    net_price DECIMAL(10, 2) GENERATED ALWAYS AS ((list_price + (list_price * tax / 100)) - (list_price * discount / 100)) STORED));

/* ALTER TABLE can be used changing a table */
ALTER TABLE table_name ACTION;

ALTER TABLE product ADD COLUMN name VARCHAR(255) NOT NULL;
ALTER TABLE product ADD CHECK list_price > 100;
ALTER TABLE links ADD CHECK (target IN ('_self', '_blank', '_parent', '_top'));
ALTER TABLE links ADD CONSTRAINT unique_url UNIQUE ( url );
ALTER TABLE products RENAME TO urunler;

ALTER TABLE products DROP COLUMN name;

/* ALTER COLUMN can be used for changing a column */
ALTER TABLE assets ALTER COLUMN name TYPE VARCHAR(255);
ALTER TABLE urunler RENAME COLUMN name TO isim;

/* DROP drops the table from the database */
DROP TABLE IF EXISTS author;

/* TRUNCATE and DROP are different. DROP remove table from the database and TRUNCATE deletes all rows in the table */
TRUNCATE TABLE products;
TRUNCATE TABLE table_name RESTART IDENTITY; /* Besides removing it can be used for restarting sequence */

/* Truncate is more efficient than Delete. 

1- Minimal Logging
2- Fewer resources
3- Lower level locking mechanism

 */

 /* If we want to create a temporary table which exists during the current session we can use TEMPORARY */
 CREATE TEMPORARY TABLE product_logs (
    id SERIAL PRIMARY KEY, 
    name VARCHAR NOT NULL
 );

 /* Sometimes we need to copy the table with data or no data. We can use AS TABLE expression for this purpose */
 CREATE TABLE new_table AS existing_table;
 CREATE TABLE new_table AS existing_table WITH NO DATA;
 CREATE TABLE new_table AS SELECT * from existing _table WHERE condition;